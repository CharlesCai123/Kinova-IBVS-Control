//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.IbvsControl
{
    [Serializable]
    public class PointOnImgMsg : Message
    {
        public const string k_RosMessageName = "ibvs_control/PointOnImg";
        public override string RosMessageName => k_RosMessageName;

        public Std.Float64Msg[] position;
        //  2
        public Std.Float64Msg[] velocity;
        //  2
        public Std.Float64Msg depth;

        public PointOnImgMsg()
        {
            this.position = new Std.Float64Msg[0];
            this.velocity = new Std.Float64Msg[0];
            this.depth = new Std.Float64Msg();
        }

        public PointOnImgMsg(Std.Float64Msg[] position, Std.Float64Msg[] velocity, Std.Float64Msg depth)
        {
            this.position = position;
            this.velocity = velocity;
            this.depth = depth;
        }

        public static PointOnImgMsg Deserialize(MessageDeserializer deserializer) => new PointOnImgMsg(deserializer);

        private PointOnImgMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.position, Std.Float64Msg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.velocity, Std.Float64Msg.Deserialize, deserializer.ReadLength());
            this.depth = Std.Float64Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.position);
            serializer.Write(this.position);
            serializer.WriteLength(this.velocity);
            serializer.Write(this.velocity);
            serializer.Write(this.depth);
        }

        public override string ToString()
        {
            return "PointOnImgMsg: " +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\nvelocity: " + System.String.Join(", ", velocity.ToList()) +
            "\ndepth: " + depth.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
